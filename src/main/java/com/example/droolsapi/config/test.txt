# DRIVER-ONLY TEST (no mapPartitions)
from pyspark.sql import Row

jvm = spark._jvm

CDM    = jvm.CommonDataObject.CommonDataModel
Config = jvm.MyDroolsConfig
JDate  = jvm.java.sql.Date
from datetime import date, timedelta

ks = Config.kieContainer().newKieSession()

# fact 1: score fact (matches your rule)
score = CDM(1, 999, 1.0, 35, "INDV_SCOR_FACT",
            None, None, "FUT_RSK_IN", 3.5, 123,
            None, None, None, "TX", "SEG1",
            None, None, "RULECD",
            None, None, None, None, "SCN",
            None, 0, None, None, None,
            None, None, None, None, 0.0, 0.0)

# fact 2: element fact (elem_dt_1 within 90-day window used by your getter)
target = date.today() - timedelta(days=60)
elem = CDM(1, 478, 1.0, 35, "INDV_ELEMENTS_LAB",
           JDate.valueOf(target.isoformat()), None,
           None, 0.0, 123,
           None, None, None, "TX", "SEG1",
           None, None, "RULECD",
           None, None, None, None, "SCN",
           None, 0, None, None, None,
           None, None, None, None, 0.0, 0.0)

ks.insert(score); ks.insert(elem)
ks.fireAllRules()

out = []
it = ks.getObjects().iterator()
while it.hasNext():
    obj = it.next()
    if obj.getClass().getName() == "CommonDataObject.CommonDataResultSet":
        out.append(obj.getStatus())
ks.dispose()
print("Statuses:", out)
