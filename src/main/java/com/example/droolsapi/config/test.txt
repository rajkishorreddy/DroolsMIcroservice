'use client';

import React, { useEffect, useState } from 'react';

export default function Page() {
  const [projects, setProjects] = useState<string[]>([]);
  const [rules, setRules] = useState<string[]>([]);
  const [selectedProject, setSelectedProject] = useState('');
  const [selectedRules, setSelectedRules] = useState<string[]>([]);

  useEffect(() => {
    fetch('http://127.0.0.1:8000/get-projects')
      .then((res) => res.json())
      .then((data) => setProjects(data))
      .catch((err) => console.error('❌ Failed to load projects:', err));
  }, []);

  useEffect(() => {
    if (selectedProject) {
      fetch(`http://127.0.0.1:8000/get-rules?project=${selectedProject}`)
        .then((res) => res.json())
        .then((data) => setRules(data))
        .catch((err) => console.error('❌ Failed to load rules:', err));
    }
  }, [selectedProject]);

  const handleAction = async (action: string) => {
    try {
      const payload = {
        project: selectedProject,
        rules: selectedRules,
      };

      let endpoint = '';

      switch (action) {
        case 'MOCK_RUN':
          endpoint = 'http://127.0.0.1:8000/mock-run';
          break;
        case 'BUILD':
          endpoint = 'http://127.0.0.1:8000/build';
          break;
        case 'EXECUTE':
          endpoint = 'http://127.0.0.1:8000/execute';
          break;
        case 'BUILD_EXECUTE':
          endpoint = 'http://127.0.0.1:8000/build-execute';
          break;
        default:
          console.error('Unknown action:', action);
          return;
      }

      const response = await fetch(endpoint, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(payload),
      });

      if (response.ok) {
        console.log(`✅ ${action} request successful`);
      } else {
        console.error(`❌ ${action} request failed`);
      }
    } catch (err) {
      console.error(`❌ Error calling ${action} endpoint:`, err);
    }
  };

  return (
    <div className="flex flex-col items-center mt-12">
      <h1 className="text-2xl font-bold mb-6">Build Rule Engine</h1>

      {/* Project dropdown */}
      <div className="mb-4 w-80">
        <label className="block mb-1 font-medium">Select Project</label>
        <select
          className="w-full border p-2 rounded"
          value={selectedProject}
          onChange={(e) => {
            setSelectedProject(e.target.value);
            setSelectedRules([]);
          }}
        >
          <option value="">-- Choose Project --</option>
          {projects.map((proj) => (
            <option key={proj} value={proj}>{proj}</option>
          ))}
        </select>
      </div>

      {/* Rule multi-select dropdown */}
      <div className="mb-6 w-80">
        <label className="block mb-1 font-medium">Select Rule(s)</label>
        <select
          multiple
          className="w-full border p-2 rounded h-32"
          value={selectedRules}
          onChange={(e) =>
            setSelectedRules(
              Array.from(e.target.selectedOptions, (option) => option.value)
            )
          }
          disabled={!rules.length}
        >
          {rules.map((rule) => (
            <option key={rule} value={rule}>
              {rule}
            </option>
          ))}
        </select>
      </div>

      {/* Action buttons */}
      <div className="grid grid-cols-2 gap-4 w-80">
        <button
          className="bg-gray-800 text-white p-2 rounded"
          onClick={() => handleAction('MOCK_RUN')}
        >
          MOCK_RUN
        </button>
        <button
          className="bg-gray-800 text-white p-2 rounded"
          onClick={() => handleAction('BUILD')}
        >
          BUILD
        </button>
        <button
          className="bg-gray-800 text-white p-2 rounded"
          onClick={() => handleAction('EXECUTE')}
        >
          EXECUTE
        </button>
        <button
          className="bg-gray-800 text-white p-2 rounded"
          onClick={() => handleAction('BUILD_EXECUTE')}
        >
          BUILD_EXECUTE
        </button>
      </div>
    </div>
  );
}
