'use client'

import React, { useEffect, useState } from 'react';
import { MultiSelect } from '@ocp/common-react-components/ui/select/multi-select';
import { useForm, Controller } from 'react-hook-form';

export default function Page() {
  const [projects, setProjects] = useState<string[]>([]);
  const [rules, setRules] = useState<string[]>([]);
  const { control, handleSubmit, watch } = useForm({
    defaultValues: {
      project: '',
      selectedRules: [],
    },
  });

  // Fetch project names
  useEffect(() => {
    fetch('http://127.0.0.1:8000/get-projects')
      .then(res => res.json())
      .then(data => setProjects(data))
      .catch(err => console.error('Error fetching projects:', err));
  }, []);

  // Fetch rules when project changes
  useEffect(() => {
    const selectedProject = watch('project');
    if (selectedProject) {
      fetch('http://127.0.0.1:8000/get-rules?project=' + selectedProject)
        .then(res => res.json())
        .then(data => setRules(data))
        .catch(err => console.error('Error fetching rules:', err));
    }
  }, [watch('project')]);

  // Button click handlers
  const handleAction = async (endpoint: string) => {
    const selectedProject = watch('project');
    const selectedRules = watch('selectedRules');
    try {
      await fetch(`http://127.0.0.1:8000/${endpoint}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          project: selectedProject,
          rules: selectedRules.map((r: any) => r.value),
        })
      });
      console.log(`${endpoint} request sent`);
    } catch (error) {
      console.error(`${endpoint} failed`, error);
    }
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gray-100">
      <div className="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-96">
        <h1 className="text-xl font-bold mb-6 text-center">Build Rule Engine</h1>

        {/* Project Dropdown */}
        <label className="block text-gray-700 text-sm font-bold mb-2">Select Project</label>
        <Controller
          name="project"
          control={control}
          render={({ field }) => (
            <select
              {...field}
              className="shadow appearance-none border rounded w-full py-2 px-3 mb-4 text-gray-700"
            >
              <option value="">-- Choose Project --</option>
              {projects.map((proj, i) => (
                <option key={i} value={proj}>
                  {proj}
                </option>
              ))}
            </select>
          )}
        />

        {/* MultiSelect for Rules */}
        <label className="block text-gray-700 text-sm font-bold mb-2">Select Rule(s)</label>
        <Controller
          name="selectedRules"
          control={control}
          render={({ field }) => (
            <MultiSelect
              name={field.name}
              value={field.value}
              onChange={field.onChange}
              options={rules.map(rule => ({ label: rule, value: rule }))}
              placeholder="Select rules"
              selectAll={false}
            />
          )}
        />

        {/* Action Buttons */}
        <div className="mt-6 grid grid-cols-2 gap-2">
          <button
            className="bg-gray-800 hover:bg-gray-700 text-white py-2 rounded"
            onClick={() => handleAction('mock-run')}
          >
            MOCK_RUN
          </button>
          <button
            className="bg-gray-800 hover:bg-gray-700 text-white py-2 rounded"
            onClick={() => handleAction('build')}
          >
            BUILD
          </button>
          <button
            className="bg-gray-800 hover:bg-gray-700 text-white py-2 rounded"
            onClick={() => handleAction('execute')}
          >
            EXECUTE
          </button>
          <button
            className="bg-gray-800 hover:bg-gray-700 text-white py-2 rounded"
            onClick={() => handleAction('build-execute')}
          >
            BUILD_EXECUTE
          </button>
        </div>
      </div>
    </div>
  );
}
