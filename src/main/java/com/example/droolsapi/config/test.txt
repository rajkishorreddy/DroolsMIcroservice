%scala
import org.kie.api.KieServices
import org.drools.compiler.kie.builder.impl.KieServicesImpl
import org.kie.api.runtime.KieContainer

// step 1: check which classloader can see the XML
val ctxCl = Thread.currentThread().getContextClassLoader
val droolsCl = classOf[KieServicesImpl].getClassLoader

println("Context loader kmodule.xml => " + ctxCl.getResource("META-INF/kmodule.xml"))
println("Drools loader kmodule.xml  => " + droolsCl.getResource("META-INF/kmodule.xml"))

// step 2: if droolsCl can see it, use that loader
val ks = new KieServicesImpl()
val kc = ks.getKieClasspathContainer(droolsCl)
println("KieBases => " + kc.getKieBaseNames)

val ksession = kc.newKieSession("rulesKSession")
println("KieSession OK => " + ksession)
ksession.dispose()
