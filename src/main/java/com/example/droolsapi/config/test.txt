// visibility probe
import scala.util.Try
def canLoad(fqn: String) = Try(Class.forName(fqn)).isSuccess
val checks = Seq(
  "org.kie.api.KieServices",                 // Drools core
  "org.kie.api.runtime.KieContainer",
  "CommonDataObject.CommonDataModel",        // your model
  "CommonDataObject.CommonDataResultSet",
  "CommonDataObject.MyDroolsConfig",         // if you moved it into a package
  "MyDroolsConfig"                           // fallback if still in default package
)
checks.foreach(f => println(f.padTo(45,' ') + " -> " + canLoad(f)))



import zipfile

jar = "/dbfs/FileStore/jars/CommonDataObject-1.0.jar"
with zipfile.ZipFile(jar, "r") as z:
    entries = [n for n in z.namelist() if "MyDroolsConfig" in n or "CommonDataObject" in n or "kie" in n]
    print(entries[:50])


// Try to load your custom classes directly
println(Class.forName("CommonDataObject.MyDroolsConfig"))
println(Class.forName("CommonDataObject.CommonDataModel"))

// Check Drools API
println(Class.forName("org.kie.api.runtime.KieContainer"))

